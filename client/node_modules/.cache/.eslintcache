[{"/Users/daniel/Documents/Plugsity/client/src/index.js":"1","/Users/daniel/Documents/Plugsity/client/src/App.js":"2","/Users/daniel/Documents/Plugsity/client/src/reportWebVitals.js":"3","/Users/daniel/Documents/Plugsity/client/src/Signup.js":"4","/Users/daniel/Documents/Plugsity/client/src/Tabs.js":"5","/Users/daniel/Documents/Plugsity/client/src/Tab.js":"6","/Users/daniel/Documents/Plugsity/client/src/SignupLogin.js":"7"},{"size":526,"mtime":1614964783235,"results":"8","hashOfConfig":"9"},{"size":729,"mtime":1614963353032,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1614360272937,"results":"11","hashOfConfig":"9"},{"size":2515,"mtime":1615336895928,"results":"12","hashOfConfig":"9"},{"size":1452,"mtime":1614969022410,"results":"13","hashOfConfig":"9"},{"size":758,"mtime":1614967927211,"results":"14","hashOfConfig":"9"},{"size":1117,"mtime":1614969144287,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xvqk56",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/daniel/Documents/Plugsity/client/src/index.js",[],["34","35"],"/Users/daniel/Documents/Plugsity/client/src/App.js",["36","37","38","39"],"import logo from './logo.svg';\nimport './App.css';\nimport Signup from './Signup.js'\nimport Tabs from './Tabs';\nimport {useState, useEffect} from 'react';\nimport SignupLogin from './SignupLogin';\n\nfunction App() {\n\nconst [reponse, setResponse] = useState(null);\n const getResponse = async() => {\n  const response = await fetch('/api/hello');\n  const body = await response.json();\n  if(response.status !==200) throw Error(body.message);\n  return body;\n }\n\n useEffect(()=> {\n   getResponse().then(res => {\n    const someData = res.express;\n    console.log(someData);\n    setResponse(someData);\n   });\n\n });\n\n  return (\n    <div className=\"App\">\n      <SignupLogin/>\n     \n      \n       \n     \n    </div>\n  );\n}\n\nexport default App;\n","/Users/daniel/Documents/Plugsity/client/src/reportWebVitals.js",[],"/Users/daniel/Documents/Plugsity/client/src/Signup.js",[],"/Users/daniel/Documents/Plugsity/client/src/Tabs.js",[],"/Users/daniel/Documents/Plugsity/client/src/Tab.js",["40"],"import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Tab extends Component {\n    static propTypes = {\n        activeTab: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired\n    }\n\n    onClick = () => {\n        const {label, onClick} = this.props;\n        this.props.onClick(label);\n    }\n    render(){\n        const{\n            onClick,\n            props: {\n                activeTab,\n                label\n            },\n        } = this;\n        let className = 'tab-list-item'\n        if(activeTab === label){\n            className+=' tab-list-active';\n        }\n        return(<div className={className} onClick={onClick}>{label}</div>)\n    }\n}\n\nexport default Tab;","/Users/daniel/Documents/Plugsity/client/src/SignupLogin.js",["41","42"],"\nimport { element } from 'prop-types';\nimport PlugsityLogo from './assets/plugsity-logo.png'\nimport './css/SignupLogin.css'\nimport Signup from './Signup'\nimport { useState } from 'react';\nimport Tabs from './Tabs'\n\nfunction SignupLogin() {\n    const [active, setActive] = useState(\"Signup\");\n    const signupBlurb = \"Sign up for a new account to submit your own video reviews to products you love, submit orders, book service and events\"\n    const loginBlurb = \"TODO (not defined in mockup)!!! Login to plugsity\"\n    return (\n        <div className=\"SignupLogin\">\n            <img src={PlugsityLogo} className=\"logo\" />\n            <div className=\"blurb\">{active===\"Signup\"?signupBlurb:loginBlurb}</div>\n            <Tabs activeTab={active} onClick={(label) => setActive(label)}>\n                <div label=\"Signup\" className=\"tab\" >\n                    <Signup className=\"tab\" />\n                </div>\n                <div label=\"Login\">\n                    <div className=\"tab\">After 'while, <em>Crocodile</em>! </div>\n                </div>\n            </Tabs>\n        </div>\n    );\n}\n\nexport default SignupLogin;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"52","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":12},{"ruleId":"47","severity":1,"message":"53","line":10,"column":8,"nodeType":"49","messageId":"50","endLine":10,"endColumn":15},{"ruleId":"47","severity":1,"message":"54","line":13,"column":23,"nodeType":"49","messageId":"50","endLine":13,"endColumn":30},{"ruleId":"47","severity":1,"message":"55","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":15,"column":13,"nodeType":"58","endLine":15,"endColumn":56},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","'Tabs' is defined but never used.","'reponse' is assigned a value but never used.","'onClick' is assigned a value but never used.","'element' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]